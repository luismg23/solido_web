(undo-tree-save-format-version . 1)
"4afeab6c3e89fa6a18c74c8bf0566e7a2e8ec4be"
[nil nil nil nil (25864 3535 500088 0) 0 nil]
([nil nil ((35 . 37) (#("  " 0 2 (fontified nil)) . 35) (35 . 37) (34 . 36) (14 . 35) (#("I" 0 1 (fontified t font-lock-face font-lock-type-face)) . -14) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("n" 0 1 (fontified t font-lock-face font-lock-type-face help-echo "missing '{' before class body" cursor-sensor-functions (js2-echo-error))) . -15) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 16 (1 . 16) (t . -1)) nil (25864 3535 500079 0) 0 nil])
([nil nil ((1 . 36) (#("export class AppearanceObserver {
  
}
" 0 6 (fontified t font-lock-face font-lock-keyword-face) 6 7 (fontified t) 7 11 (fontified t font-lock-face font-lock-keyword-face) 11 12 (fontified t font-lock-face font-lock-keyword-face) 12 13 (fontified t) 13 22 (fontified t font-lock-face font-lock-type-face) 22 24 (fontified t font-lock-face font-lock-type-face) 24 31 (fontified t font-lock-face font-lock-type-face) 31 32 (fontified t) 32 37 (fontified t) 37 38 (fontified nil) 38 39 (fontified nil)) . -1) (undo-tree-id0 . -37) (undo-tree-id1 . 3) (undo-tree-id2 . 6) (undo-tree-id3 . -37) (undo-tree-id4 . -37) (undo-tree-id5 . -37) (undo-tree-id6 . -37) (undo-tree-id7 . -37) (undo-tree-id8 . -37) (undo-tree-id9 . -37) (39 . 40)) nil (25864 3535 500065 0) 0 nil])
([nil nil ((46 . 52) (#("f" 0 1 (fontified t help-echo "Undeclared variable or function 'f'" cursor-sensor-functions (js2-echo-error))) . -46) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) 47 (46 . 47) (#(" " 0 1 (fontified t)) . -46) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (#("t" 0 1 (fontified t help-echo "Undeclared variable or function 'ta'" cursor-sensor-functions (js2-echo-error))) . -47) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (#("a" 0 1 (fontified t help-echo "Undeclared variable or function 'ta'" cursor-sensor-functions (js2-echo-error))) . -48) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) 49 (41 . 49) (37 . 41) (35 . 37) (37 . 39) (#("  " 0 2 (fontified nil)) . 36) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (36 . 39) (#("  " 0 2 (fontified nil)) . 35) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (37 . 38) (69 . 73) (70 . 72) (#("    " 0 4 (fontified nil)) . 69) (69 . 73) (68 . 70) (66 . 69) (59 . 66) (57 . 59) (#("  " 0 2 (fontified nil)) . 56) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (55 . 59) (47 . 51) (48 . 50) (#("    " 0 4 (fontified nil)) . 47) (47 . 51) (46 . 48) (44 . 47) (37 . 44) (35 . 37) (#("  " 0 2 (fontified nil)) . 35) (35 . 37) (34 . 36) (t 25864 3535 502088 218000)) nil (25864 3623 975425 0) 0 nil])
([nil nil ((69 . 82) (#("  stop () {
    
  }
" 0 2 (fontified t) 2 6 (fontified t font-lock-face font-lock-function-name-face) 6 7 (fontified t) 7 10 (fontified t) 10 20 (fontified t) 20 21 (fontified t)) . -69) (undo-tree-id24 . 1) (undo-tree-id25 . 5) (undo-tree-id26 . 10) (54 . 68) (#("  start() {
    
  }
" 0 2 (fontified t) 2 7 (fontified t font-lock-face font-lock-function-name-face) 7 10 (fontified t) 10 12 (fontified t) 12 17 (fontified t) 17 21 (fontified t)) . -54) (undo-tree-id27 . 5) (undo-tree-id28 . 10) (undo-tree-id29 . 1)) nil (25864 3623 975406 0) 0 nil])
([nil nil ((105 . 108) (84 . 105) (80 . 84) (81 . 83) (#("    " 0 4 (fontified nil)) . 80) (80 . 84) (79 . 81) (77 . 80) (68 . 76) (56 . 69) (54 . 56) (#("  " 0 2 (fontified nil)) . 53) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (55 . 56) (53 . 55) (53 . 54) (t 25864 3623 977959 838000)) nil (25864 4134 78254 0) 0 nil])
([nil nil ((54 . 81) (#("  constructor(delegate) {
" 0 2 (fontified t) 2 13 (fontified t font-lock-face font-lock-function-name-face) 13 14 (fontified t) 14 22 (fontified t font-lock-face js2-function-param) 22 24 (fontified t) 24 26 (fontified t)) . -54) (undo-tree-id56 . 1)) nil (25864 4134 78247 0) 0 nil])
([nil nil ((159 . 166) (158 . 160) (#("e" 0 1 (fontified t help-echo "Undeclared variable or function 'e'" cursor-sensor-functions (js2-echo-error))) . -158) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) 159 (158 . 159) (155 . 158) (#("(" 0 1 (fontified t)) . -155) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (#(")" 0 1 (fontified t)) . -156) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . 1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) 157 (160 . 164) (161 . 163) (#("    " 0 4 (fontified nil)) . 160) (160 . 164) (159 . 161) (157 . 160) (146 . 157) (144 . 146) (#("  " 0 2 (fontified nil)) . 143) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (145 . 146) (142 . 145) (t 25864 4134 80231 58000) 141) nil (25864 4182 375136 0) 0 nil])
([nil nil ((167 . 170) (#(" " 0 1 (fontified t)) . -166) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) 167 (166 . 167)) nil (25864 4182 375126 0) 0 nil])
([nil nil ((144 . 172) (#("  intersect = (entries) => {
    
  }
" 0 2 (fontified t) 2 14 (fontified t) 14 15 (fontified t) 15 22 (fontified t font-lock-face js2-function-param) 22 26 (fontified t) 26 27 (fontified t) 27 29 (fontified t) 29 37 (fontified t) 37 38 (fontified t)) . -144) (undo-tree-id60 . 12) (undo-tree-id61 . -25) (undo-tree-id62 . -25) (undo-tree-id63 . 5) (undo-tree-id64 . 10) (undo-tree-id65 . -25) (undo-tree-id66 . -25) 169) nil (25864 4182 375120 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 239 . 240) (115 . 240) (111 . 115) (#("    " 0 4 (fontified nil)) . 110) (undo-tree-id122 . -4) (undo-tree-id123 . -4) (undo-tree-id124 . -4) (114 . 115) (109 . 114) (t 25864 4182 378464 926000) 108) nil (25864 4264 264153 0) 0 nil])
([nil nil ((#("        this.intersectionCallback.bind(this),
        {}
" 0 8 (fontified t) 8 12 (fontified t font-lock-face font-lock-builtin-face) 12 13 (fontified t) 13 33 (fontified t font-lock-face js2-object-property-access) 33 34 (fontified t) 34 38 (fontified t font-lock-face js2-function-call) 38 39 (fontified t) 39 43 (fontified t font-lock-face font-lock-builtin-face) 43 57 (fontified t)) . 175) (undo-tree-id110 . -56) (undo-tree-id111 . -56) (undo-tree-id112 . -56) (undo-tree-id113 . -56) (undo-tree-id114 . -57) (undo-tree-id115 . -31) (undo-tree-id116 . -56) (undo-tree-id117 . -57) (undo-tree-id118 . -31) (undo-tree-id119 . -56) (undo-tree-id120 . -56) (undo-tree-id121 . -57) 231) nil (25864 4264 264150 0) 0 nil])
([nil nil ((189 . 251) (#("      " 0 6 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . 189) (undo-tree-id108 . 6) (undo-tree-id109 . 6) (#(")" 0 1 (fontified nil)) . 188) (188 . 189) (#(")" 0 1 (fontified nil font-lock-face js2-object-property-access)) . -188) (187 . 189) (174 . 187)) nil (25864 4264 264140 0) 0 nil])
([nil nil ((111 . 184) (#("          this.intersectionObserver = new IntersectionObserver(this.intersect
                                                              )

" 0 4 (fontified t) 4 10 (fontified t) 10 14 (fontified t font-lock-face font-lock-builtin-face) 14 15 (fontified t) 15 35 (fontified t font-lock-face js2-object-property-access) 35 38 (fontified t) 38 41 (fontified t font-lock-face font-lock-keyword-face) 41 42 (fontified t) 42 62 (fontified t font-lock-face js2-function-call help-echo "Undeclared variable or function 'IntersectionObserver'" cursor-sensor-functions (js2-echo-error)) 62 63 (fontified t) 63 67 (fontified t font-lock-face font-lock-builtin-face) 67 68 (fontified t) 68 77 (fontified t font-lock-face js2-object-property-access) 77 78 (fontified t) 78 140 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 140 141 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 141 142 (fontified t rear-nonsticky t) 142 143 (fontified t)) . -111) (undo-tree-id85 . -78) (undo-tree-id86 . 2) (undo-tree-id87 . -78) (undo-tree-id88 . -78) (undo-tree-id89 . -140) (undo-tree-id90 . -140) (undo-tree-id91 . -4) (undo-tree-id92 . -78) (undo-tree-id93 . 3) (undo-tree-id94 . -78) (undo-tree-id95 . -78) (undo-tree-id96 . -78) (undo-tree-id97 . -141) (undo-tree-id98 . -42) (undo-tree-id99 . -62) (undo-tree-id100 . -78) (undo-tree-id101 . -141) (undo-tree-id102 . 3) (undo-tree-id103 . -141) (undo-tree-id104 . 81) (undo-tree-id105 . -63) (undo-tree-id106 . -140) (undo-tree-id107 . -140) 251) nil (25864 4264 264134 0) 0 nil])
([nil nil ((77 . 86) (t 25864 4264 266715 814000)) nil (25864 4279 200229 0) 0 nil])
([nil nil ((144 . 145) (123 . 144) (118 . 123) 116) nil (25864 4279 200224 0) 0 nil])
([nil nil ((86 . 93) (t 25864 4279 202010 689000)) nil (25864 4292 668963 0) 0 nil])
([nil nil ((156 . 164) (#("deleg" 0 5 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -156) (undo-tree-id125 . -5) (undo-tree-id126 . -5) (undo-tree-id127 . -5) (undo-tree-id128 . -5) (undo-tree-id129 . -5) 161 (158 . 161) (#("e" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -158) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) 159 (152 . 159)) nil (25864 4292 668960 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 370 . 371) (nil fontified nil 261 . 371) (261 . 371) (257 . 261) (258 . 260) (#("    " 0 4 (fontified nil)) . 257) (257 . 261) (256 . 258) (t 25864 4292 670374 210000)) nil (25864 4315 602342 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 504 . 505) (nil fontified nil 393 . 505) (393 . 505) (389 . 393) (390 . 392) (#("    " 0 4 (fontified nil)) . 389) (389 . 393) (388 . 390)) nil (25864 4315 602340 0) 0 nil])
([nil nil ((385 . 409) (#("        if (this.started) {
" 0 4 (fontified t) 4 8 (fontified t) 8 10 (fontified t font-lock-face font-lock-keyword-face) 10 12 (fontified t) 12 16 (fontified t font-lock-face font-lock-builtin-face) 16 17 (fontified t) 17 24 (fontified t font-lock-face js2-object-property-access) 24 28 (fontified t)) . -385) (undo-tree-id135 . -4) (undo-tree-id136 . 2) (undo-tree-id137 . -27) (257 . 282) (#("        if (!this.started) {
" 0 4 (fontified t) 4 8 (fontified t) 8 10 (fontified t font-lock-face font-lock-keyword-face) 10 12 (fontified t) 12 13 (fontified t font-lock-face font-lock-negation-char-face) 13 17 (fontified t font-lock-face font-lock-builtin-face) 17 18 (fontified t) 18 25 (fontified t font-lock-face js2-object-property-access) 25 29 (fontified t)) . -257) (undo-tree-id138 . -4) 504) nil (25864 4315 602335 0) 0 nil])
([nil nil ((596 . 604) (nil rear-nonsticky nil 952 . 953) (534 . 953) (530 . 534) (531 . 533) (#("    " 0 4 (fontified nil)) . 530) (530 . 534) (529 . 531) (t 25864 4315 604285 574000)) nil (25864 4377 13785 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -957) (undo-tree-id139 . 1) (530 . 561) (#("        entries.forEach(entry => {
" 0 4 (fontified t) 4 8 (fontified t) 8 15 (fontified t) 15 16 (fontified t) 16 23 (fontified t font-lock-face js2-function-call) 23 24 (fontified t) 24 29 (fontified t font-lock-face js2-function-param) 29 33 (fontified t) 33 34 (rear-nonsticky t fontified t) 34 35 (fontified t)) . -530) (undo-tree-id140 . -4) 794) nil (25864 4468 523650 0) 0 nil])
([nil nil ((#("            this.update({})
" 0 12 (fontified t) 12 13 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 13 16 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 16 17 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 17 23 (fontified t font-lock-face js2-function-call help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 23 24 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 24 26 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 26 27 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 27 28 (fontified t)) . 804) (undo-tree-id217 . -26) (undo-tree-id218 . -27) (undo-tree-id219 . -26) (undo-tree-id220 . -26) (undo-tree-id221 . -26) (undo-tree-id222 . -26) (undo-tree-id223 . 2) (undo-tree-id224 . -27) (undo-tree-id225 . 5) (undo-tree-id226 . -24) (undo-tree-id227 . -12) (undo-tree-id228 . -27) (undo-tree-id229 . -26)) ((804 . 832)) (25864 4473 138202 0) 0 nil])
([nil nil ((830 . 848) (#("appeared" 0 8 (fontified nil font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . 830) (829 . 838) (#("()" 0 1 (fontified nil help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 1 2 (fontified nil help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . 829) (804 . 831) (804 . 805)) ((#("
" 0 1 (fontified nil)) . 804) (#("            " 0 12 (fontified nil)) . 804) (undo-tree-id203 . -12) (undo-tree-id204 . -12) (undo-tree-id205 . -12) (undo-tree-id206 . -12) (undo-tree-id207 . -12) (#("this.delegate()" 0 1 (fontified nil font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 1 4 (fontified nil font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 4 5 (fontified nil help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 5 13 (fontified nil font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 13 14 (fontified nil help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 14 15 (fontified nil help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . 816) (undo-tree-id208 . -13) (undo-tree-id209 . -13) (undo-tree-id210 . -13) (829 . 831) (#(".appeared" 0 1 (fontified nil help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 1 9 (fontified nil font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . 829) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (830 . 838) (#("appearedInViewport" 0 18 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . 830) (undo-tree-id214 . -18) (undo-tree-id215 . -18) (undo-tree-id216 . -18)) (25864 4473 362234 0) 0 nil])
([nil nil ((#("  started = false
" 0 12 (fontified t) 12 17 (fontified t font-lock-face font-lock-constant-face) 17 18 (fontified t)) . 35) (undo-tree-id230 . -16) (undo-tree-id231 . -16) (undo-tree-id232 . -16) (undo-tree-id233 . -16) (undo-tree-id234 . -16)) ((35 . 53)) (25864 4473 600692 0) 0 nil])
([nil nil ((191 . 201) (#("on" 0 1 (fontified nil font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 1 2 (fontified nil font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . 191) (171 . 193) (#(";" 0 1 (fontified nil)) . 171) (146 . 172)) ((#("
    " 0 1 (fontified t) 1 5 (fontified nil)) . 146) (undo-tree-id187 . -5) (undo-tree-id188 . -5) (undo-tree-id189 . -5) (undo-tree-id190 . -5) (undo-tree-id191 . -5) (#("this.started = false;" 0 4 (fontified nil font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 4 5 (fontified nil help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 5 12 (fontified nil font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 12 15 (fontified nil help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 15 20 (fontified nil font-lock-face font-lock-constant-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 20 21 (fontified nil)) . 151) (undo-tree-id192 . -20) (undo-tree-id193 . -20) (undo-tree-id194 . -20) (undo-tree-id195 . -20) (171 . 172) (#("
    " 0 1 (fontified t) 1 5 (fontified nil)) . 171) (undo-tree-id196 . -5) (undo-tree-id197 . -5) (undo-tree-id198 . -5) (#("this.intersection" 0 4 (fontified nil font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 4 5 (fontified nil help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 5 15 (fontified nil font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 15 16 (fontified nil font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 16 17 (fontified nil font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . 176) (undo-tree-id199 . -15) (undo-tree-id200 . -15) (191 . 193) (#("ng = false" 0 2 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 2 5 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 5 10 (fontified t font-lock-face font-lock-constant-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . 191) (undo-tree-id201 . -9) (undo-tree-id202 . -10)) (25864 4474 265010 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 35)) ((35 . 36) (t 25864 4449 47467 417000)) (25864 4474 920046 0) 0 nil])
([nil nil ((884 . 886) (t 25864 4449 47467 417000)) nil (25864 4482 299312 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 204 . 205) (#("
" 0 1 (fontified nil)) . -245) (200 . 246) 171 (t 25864 4482 300821 790000)) nil (25864 4505 763920 0) 0 nil])
([nil nil ((#("            this.didTransitionToIntersecting = true
" 0 12 (fontified t) 12 16 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 16 17 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 17 44 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 44 47 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 47 51 (fontified t font-lock-face font-lock-constant-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 51 52 (fontified t)) . 833) (undo-tree-id250 . -51) (undo-tree-id251 . -51) (undo-tree-id252 . -50) (undo-tree-id253 . -50) 883 (t 25864 4505 765460 656000)) nil (25864 4607 190534 0) 0 nil])
([nil nil ((#("    this.intersecting = false
    this.didTransitionToIntersecting = false
" 0 4 (fontified t) 4 8 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 8 9 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 9 19 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 19 21 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 21 24 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 24 29 (fontified t font-lock-face font-lock-constant-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 29 30 (fontified t) 30 33 (fontified t) 33 34 (fontified t rear-nonsticky t) 34 38 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 38 39 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 39 66 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 66 69 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 69 74 (fontified t font-lock-face font-lock-constant-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 74 75 (fontified t)) . 171) (undo-tree-id235 . -58) (undo-tree-id236 . -74) (undo-tree-id237 . -58) (undo-tree-id238 . -28) (undo-tree-id239 . -58) (undo-tree-id240 . -58) (undo-tree-id241 . -34) (undo-tree-id242 . -74) (undo-tree-id243 . -4) (undo-tree-id244 . -29) (undo-tree-id245 . -75) (undo-tree-id246 . -28) (undo-tree-id247 . -58) (undo-tree-id248 . -58) (undo-tree-id249 . -75) 229) nil (25864 4607 190528 0) 0 nil])
([nil nil ((#("            this.delegate.appearedInViewport()
" 0 12 (fontified t) 12 13 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 13 16 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 16 17 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 17 25 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 25 26 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 26 44 (fontified t font-lock-face js2-function-call help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 44 46 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 46 47 (fontified t)) . 758) (undo-tree-id279 . -46) (undo-tree-id280 . 2) (undo-tree-id281 . -46) (undo-tree-id282 . -45) (undo-tree-id283 . -46) (undo-tree-id284 . -46) (undo-tree-id285 . -46) (undo-tree-id286 . -45) (undo-tree-id287 . 2) (undo-tree-id288 . -46) (undo-tree-id289 . 3) (undo-tree-id290 . -45) 803 (t 25864 4607 196093 785000)) nil (25864 4738 195860 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 657 . 658) (#("
" 0 1 (fontified nil)) . -692) (645 . 693) 620) nil (25864 4738 195855 0) 0 nil])
([nil nil ((#("  " 0 1 (fontified t) 1 2 (fontified t rear-nonsticky t)) . -656) (undo-tree-id277 . -2) (undo-tree-id278 . -2) 658) nil (25864 4738 195854 0) 0 nil])
([nil nil ((#("          if (!this.intersecting) {
          }
          this.intersecting = true
" 0 10 (fontified t) 10 12 (fontified t font-lock-face font-lock-keyword-face) 12 14 (fontified t) 14 15 (fontified t font-lock-face font-lock-negation-char-face) 15 19 (fontified t font-lock-face font-lock-builtin-face) 19 20 (fontified t) 20 32 (fontified t font-lock-face js2-object-property-access) 32 35 (fontified t) 35 36 (fontified t) 36 47 (fontified t) 47 48 (fontified t) 48 58 (fontified t) 58 62 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 62 63 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 63 75 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 75 78 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 78 82 (fontified t font-lock-face font-lock-constant-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 82 83 (fontified t)) . 767) (undo-tree-id268 . -60) (undo-tree-id269 . 47) (undo-tree-id270 . -82) (undo-tree-id271 . -60) (undo-tree-id272 . -12) (undo-tree-id273 . -60) (undo-tree-id274 . -60) (undo-tree-id275 . -12) (undo-tree-id276 . -60) 827) nil (25864 4738 195852 0) 0 nil])
([nil nil ((#("          this.intersecting = false
" 0 10 (fontified t) 10 14 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 14 15 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 15 27 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 27 30 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 30 35 (fontified t font-lock-face font-lock-constant-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 35 36 (fontified t)) . 784) (undo-tree-id261 . -35) (undo-tree-id262 . -35) (undo-tree-id263 . -34) (undo-tree-id264 . -35) (undo-tree-id265 . -35) (undo-tree-id266 . -35) (undo-tree-id267 . -34) 818) nil (25864 4738 195848 0) 0 nil])
([nil nil ((831 . 833) (808 . 831) (#("disappearedFromView" 0 19 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -808) (undo-tree-id257 . -19) (undo-tree-id258 . -19) 827 (811 . 827) (#("s" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -811) (undo-tree-id259 . -1) (undo-tree-id260 . -1) 812 (794 . 812) (783 . 794) 775) nil (25864 4738 195844 0) 0 nil])
([nil nil ((#("          // transition from non-intersecting to intersecting forces update
" 0 10 (fontified t) 10 75 (fontified t font-lock-face font-lock-comment-face) 75 76 (fontified t font-lock-face font-lock-comment-face)) . 691) (undo-tree-id254 . -75) (undo-tree-id255 . -47) (undo-tree-id256 . -47) 738) nil (25864 4738 195838 0) 0 nil])
([nil nil ((511 . 514) (509 . 511) (#("  " 0 2 (fontified nil)) . 508) (508 . 510) (508 . 509) (508 . 511) (t 25864 4738 198791 277000) 508) nil (25864 5470 364982 0) 0 nil])
([nil nil ((#("  obs
" 0 2 (fontified t) 2 5 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 'obs'" cursor-sensor-functions (js2-echo-error)) 5 6 (fontified t)) . 509) (undo-tree-id405 . 1) (undo-tree-id406 . -5) (undo-tree-id407 . -4) (undo-tree-id408 . -4) (undo-tree-id409 . -2) (undo-tree-id410 . -5) (undo-tree-id411 . -4) (undo-tree-id412 . -6) 513) nil (25864 5470 364979 0) 0 nil])
([nil nil ((#("  
" 0 2 (fontified t) 2 3 (fontified t)) . 509) (undo-tree-id398 . 3) (undo-tree-id399 . -2) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -2) (undo-tree-id403 . -1) (undo-tree-id404 . -3) 510) nil (25864 5470 364975 0) 0 nil])
([nil nil ((897 . 907) (880 . 896) (879 . 881) (#("'" 0 1 (fontified nil help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -879) (879 . 880) (874 . 880) (853 . 874) (885 . 888) (880 . 885) (#("(" 0 1 (fontified t)) . -880) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (#(")" 0 1 (fontified t)) . -881) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . 1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) 882 (843 . 846) (838 . 843) (#("(" 0 1 (fontified t)) . -838) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (#(")" 0 1 (fontified t)) . -839) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . 1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) 840 (396 . 398) (#(")" 0 1 (fontified t help-echo "missing ; before statement" cursor-sensor-functions (js2-echo-error))) . -396) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . 1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) 397 (396 . 397) (#(")" 0 1 (fontified nil font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -396) (396 . 397) (379 . 396) (#("obs" 0 3 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -379) (undo-tree-id354 . -3) (undo-tree-id355 . -3) (undo-tree-id356 . -3) (undo-tree-id357 . -3) (undo-tree-id358 . -3) 382 (379 . 382) (376 . 379) (#("s" 0 1 (fontified t help-echo "Undeclared variable or function 'ths'" cursor-sensor-functions (js2-echo-error))) . -376) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (#("." 0 1 (fontified t help-echo "missing name after . operator" cursor-sensor-functions (js2-echo-error))) . -377) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) 378 (374 . 378) (367 . 374) (#("a" 0 1 (fontified t help-echo "missing ; before statement" cursor-sensor-functions (js2-echo-error))) . -367) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) 368 (367 . 368) (848 . 852) (849 . 851) (#("    " 0 4 (fontified nil)) . 848) (848 . 852) (847 . 849) (845 . 848) (836 . 845) (833 . 836) (824 . 833) (#("unob" 0 4 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 'unob'" cursor-sensor-functions (js2-echo-error))) . -824) (undo-tree-id376 . -4) (undo-tree-id377 . -4) (undo-tree-id378 . -4) (undo-tree-id379 . -4) 828 (824 . 828) (822 . 824) (#("  " 0 2 (fontified nil)) . 821) (undo-tree-id380 . -2) (undo-tree-id381 . -2) (undo-tree-id382 . -2) (820 . 824) (812 . 816) (813 . 815) (#("    " 0 4 (fontified nil)) . 812) (812 . 816) (811 . 813) (809 . 812) (798 . 809) (791 . 798) (#("v" 0 1 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 'ov'" cursor-sensor-functions (js2-echo-error))) . -791) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (#("e" 0 1 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 'over'" cursor-sensor-functions (js2-echo-error))) . -792) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (#("r" 0 1 (fontified t font-lock-face js2-object-property help-echo "Undeclared variable or function 'over'" cursor-sensor-functions (js2-echo-error))) . -793) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) 794 (790 . 794) (788 . 790) (#("  " 0 2 (fontified nil)) . 787) (undo-tree-id395 . -2) (undo-tree-id396 . -2) (undo-tree-id397 . -2) (789 . 790) (786 . 789) 784) nil (25864 5470 364966 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -980) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (#(")" 0 1 (fontified t)) . -981) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . 1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) 982 (992 . 993) (986 . 991) (982 . 987) (969 . 982) (958 . 969) (956 . 958) (#("  " 0 2 (fontified nil)) . 955) (undo-tree-id324 . -2) (undo-tree-id325 . -2) (undo-tree-id326 . -2) (957 . 958) (954 . 957) 953) nil (25864 5470 364920 0) 0 nil])
([nil nil ((996 . 1000) (997 . 999) (#("    " 0 4 (fontified nil)) . 996) (996 . 1000) (995 . 997) (990 . 996) (#("=" 0 1 (fontified t)) . -990) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) 991 (990 . 991) (#(" " 0 1 (fontified t)) . -990) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (#(" " 0 1 (fontified t)) . -991) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (#("=" 0 1 (fontified t)) . -992) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) 993 (991 . 993)) nil (25864 5470 364911 0) 0 nil])
([nil nil ((948 . 987) (#("  handleVisibilityChange = (event) => {
    
  }
" 0 2 (fontified t) 2 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 27 (fontified t) 27 28 (fontified t) 28 33 (fontified t font-lock-face js2-function-param) 33 38 (fontified t) 38 48 (fontified t) 48 49 (fontified t)) . -948) (undo-tree-id291 . 5) (undo-tree-id292 . -43) (undo-tree-id293 . 5) (undo-tree-id294 . 10) (undo-tree-id295 . -43) (undo-tree-id296 . -43) (undo-tree-id297 . -43) (undo-tree-id298 . -43) (undo-tree-id299 . -43) (undo-tree-id300 . -43) (undo-tree-id301 . -43) (914 . 947) (#("  unobserveVisibility = () => {
    
  }
" 0 2 (fontified t) 2 21 (fontified t) 21 24 (fontified t) 24 25 (fontified t) 25 26 (fontified t) 26 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 32 (fontified t) 32 37 (fontified t) 37 40 (fontified t) 40 41 (fontified t)) . -914) (undo-tree-id302 . 5) (undo-tree-id303 . 10)) nil (25864 5470 364901 0) 0 nil])
([nil nil ((904 . 926) (#("handle" 0 6 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -904) (undo-tree-id427 . -3) (undo-tree-id428 . -6) (undo-tree-id429 . -6) (undo-tree-id430 . -6) 910 (907 . 910) (t 25864 5470 368344 459000)) nil (25864 5507 504023 0) 0 nil])
([nil nil ((1023 . 1045) (#("handle" 0 6 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -1023) (undo-tree-id421 . -6) (undo-tree-id422 . -6) (undo-tree-id423 . -6) 1029 (1016 . 1029) (999 . 1015) (#("visibili" 0 8 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -999) (undo-tree-id424 . -8) (undo-tree-id425 . -8) (undo-tree-id426 . -8) 1007 (999 . 1007) (998 . 1000) (#("'" 0 1 (fontified nil help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -998) (998 . 999) (997 . 999) (990 . 997) (969 . 990) (965 . 969) (966 . 968) (#("    " 0 4 (fontified nil)) . 965) (965 . 969) (964 . 966)) nil (25864 5507 504019 0) 0 nil])
([nil nil ((965 . 1065) (#("    document.removeEventListener('visibilitychange', this.handleVisibilityChange)
" 0 4 (fontified t) 4 5 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 5 12 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 12 13 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 13 32 (fontified t font-lock-face js2-function-call help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 32 33 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 33 34 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 34 50 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 50 51 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 51 53 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 53 57 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 57 58 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 58 80 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 80 81 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 81 82 (fontified t)) . -965) (undo-tree-id413 . 2) (undo-tree-id414 . -79) (undo-tree-id415 . -79) (undo-tree-id416 . 1) (undo-tree-id417 . -4) (undo-tree-id418 . -81) (undo-tree-id419 . -79) (undo-tree-id420 . -79) 1044) nil (25864 5507 504011 0) 0 nil])
([nil nil ((#("
  observeVisibility = () => {
    document.addEventListener('visibilitychange', this.handleVisibilityChange)
  }

  unobserveVisibility = () => {
    document.removeEventListener(
      'visibilitychange',
      this.handleVisibilityChange
    )
  }
" 0 1 (fontified t) 1 3 (fontified t) 3 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 35 (fontified t) 35 36 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 36 43 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 43 44 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 44 60 (fontified t font-lock-face js2-function-call help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 60 61 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 61 79 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 79 81 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 81 85 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 85 86 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 86 108 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 108 109 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 109 110 (fontified t) 110 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 147 (fontified t) 147 160 (fontified t) 160 179 (fontified t font-lock-face js2-function-call) 179 187 (fontified t) 187 205 (fontified t font-lock-face font-lock-string-face) 205 213 (fontified t) 213 217 (fontified t font-lock-face font-lock-builtin-face) 217 218 (fontified t) 218 240 (fontified t font-lock-face js2-object-property-access) 240 241 (fontified t) 241 246 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 246 247 (fontified t) 247 251 (fontified t)) . 818) (undo-tree-id442 . -247) (undo-tree-id443 . 4) (undo-tree-id444 . -250) (undo-tree-id445 . -247) (undo-tree-id446 . -247) (undo-tree-id447 . -20) (undo-tree-id448 . -35) (undo-tree-id449 . -247) (undo-tree-id450 . 4) (undo-tree-id451 . -241) (undo-tree-id452 . -246) (undo-tree-id453 . -35) (undo-tree-id454 . -109) (undo-tree-id455 . -251) (undo-tree-id456 . -247) (undo-tree-id457 . -247) (undo-tree-id458 . -251) 1065 (t 25864 5507 506565 490000)) nil (25864 5525 316663 0) 0 nil])
([nil nil ((539 . 790)) nil (25864 5525 316655 0) 0 nil])
([nil nil ((559 . 561) (540 . 559) (#("unob" 0 4 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -540) (undo-tree-id431 . -4) (undo-tree-id432 . -4) (undo-tree-id433 . -4) (undo-tree-id434 . -4) (undo-tree-id435 . -4) 544 (537 . 544) (#("u" 0 1 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -537) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) 538 (535 . 538) (528 . 535)) nil (25864 5525 316651 0) 0 nil])
([nil nil ((1204 . 1210) (1205 . 1209) (#("      " 0 6 (fontified nil)) . 1204) (1204 . 1210) (1203 . 1205) (1196 . 1204) (#("  " 0 2 (fontified nil)) . -1195) (undo-tree-id477 . -2) (undo-tree-id478 . -2) (undo-tree-id479 . -2) (1197 . 1198) (#("}" 0 1 (fontified nil)) . -1197) (1197 . 1198) (1190 . 1197) (nil rear-nonsticky nil 1189 . 1190) (nil fontified nil 1145 . 1190) (1145 . 1190) (1141 . 1145) (1142 . 1144) (#("    " 0 4 (fontified nil)) . 1141) (1141 . 1145) (1140 . 1142) (t 25864 5525 318879 176000)) nil (25864 5617 540916 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1241 . 1242) (1197 . 1242) (1190 . 1197) 1189) nil (25864 5617 540912 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1265 . 1266) (1256 . 1306) 1261) nil (25864 5617 540911 0) 0 nil])
([nil nil ((1245 . 1291) (#("          this.delegate.disappearedFromViewport()
      
" 0 9 (fontified t) 9 10 (fontified t rear-nonsticky t) 10 11 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 11 14 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 14 15 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 15 23 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 23 24 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 24 47 (fontified t font-lock-face js2-function-call help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 47 49 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 49 50 (fontified t) 50 57 (fontified t)) . -1245) (undo-tree-id459 . -55) (undo-tree-id460 . -49) (undo-tree-id461 . -10) (undo-tree-id462 . -56) (undo-tree-id463 . -56) (undo-tree-id464 . -56) (undo-tree-id465 . -10) (undo-tree-id466 . 1) (undo-tree-id467 . -56) (undo-tree-id468 . -10) (undo-tree-id469 . -49) (undo-tree-id470 . -10) (undo-tree-id471 . -10) (1141 . 1232) (#("    if (document.visibilityState === \"visible\") {
                this.delegate.appearedInViewport()

" 0 4 (fontified t) 4 6 (fontified t font-lock-face font-lock-keyword-face) 6 17 (fontified t) 17 32 (fontified t font-lock-face js2-object-property-access) 32 37 (fontified t) 37 46 (fontified t font-lock-face font-lock-string-face) 46 48 (fontified t) 48 49 (fontified t rear-nonsticky t) 49 50 (fontified t) 50 56 (fontified t) 56 66 (fontified t) 66 67 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 67 70 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 70 71 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 71 79 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 79 80 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 80 98 (fontified t font-lock-face js2-function-call help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 98 100 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 100 101 (fontified t rear-nonsticky t) 101 102 (fontified t)) . -1141) (undo-tree-id472 . 1) (undo-tree-id473 . 1) (undo-tree-id474 . -49) (undo-tree-id475 . -66) (undo-tree-id476 . -100) 1266) nil (25864 6761 714734 0) 0 nil])
([nil nil ((991 . 998) (990 . 992) (#("'" 0 1 (fontified nil)) . -990) (990 . 991) (#("\"" 0 1 (fontified nil font-lock-face font-lock-string-face)) . -990) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (#("\"" 0 1 (fontified t font-lock-face font-lock-string-face)) . 991) (#("'" 0 1 (fontified t font-lock-face font-lock-string-face)) . -991) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) 992 (991 . 992) (990 . 992) (#("\"" 0 1 (fontified nil)) . -990) (988 . 991) (#(" " 0 1 (fontified t)) . -988) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) 989 (985 . 989) (970 . 985) (#("visi" 0 4 (fontified t font-lock-face js2-object-property-access)) . -970) (undo-tree-id553 . -4) (undo-tree-id554 . -4) (undo-tree-id555 . -4) 974 (958 . 974) (#("^" 0 1 (fontified t)) . -958) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (#("^" 0 1 (fontified t help-echo "syntax error" cursor-sensor-functions (js2-echo-error))) . -959) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (#(" " 0 1 (fontified t)) . -960) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) 961 (957 . 961) (t 25864 6764 377315 203000)) nil (25864 6790 262233 0) 0 nil] [nil nil ((#("
  handleVisibilityChange = event => {
    if (document.visibilityState === 'visible') {
      this.delegate.appearedInViewport()
    } else {
      this.delegate.disappearedFromViewport()
    }
  }
" 0 1 (fontified t) 1 3 (fontified t) 3 25 (fontified t) 25 28 (fontified t) 28 33 (fontified t font-lock-face js2-function-param) 33 39 (fontified t) 39 43 (fontified t) 43 45 (fontified t font-lock-face font-lock-keyword-face) 45 56 (fontified t) 56 71 (fontified t font-lock-face js2-object-property-access) 71 76 (fontified t) 76 85 (fontified t font-lock-face font-lock-string-face) 85 95 (fontified t) 95 99 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 99 100 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 100 108 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 108 109 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 109 127 (fontified t font-lock-face js2-function-call help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 127 129 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 129 130 (fontified t) 130 134 (fontified t) 134 136 (fontified t) 136 140 (fontified t font-lock-face font-lock-keyword-face) 140 141 (fontified t) 141 143 (fontified t) 143 149 (fontified t) 149 153 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 153 154 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 154 162 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 162 163 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 163 186 (fontified t font-lock-face js2-function-call help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 186 188 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 188 189 (fontified t) 189 194 (fontified t) 194 195 (fontified t) 195 198 (fontified t) 198 199 (fontified t)) . 1102) (undo-tree-id512 . -195) (undo-tree-id513 . 69) (undo-tree-id514 . -198) (undo-tree-id515 . -195) (undo-tree-id516 . -195) (undo-tree-id517 . -198) (undo-tree-id518 . -39) (undo-tree-id519 . -143) (undo-tree-id520 . -149) (undo-tree-id521 . -188) (undo-tree-id522 . -95) (undo-tree-id523 . -129) (undo-tree-id524 . -195) (undo-tree-id525 . -199) (undo-tree-id526 . -195) (undo-tree-id527 . -195) (undo-tree-id528 . -199) 1297 (t 25864 5617 544093 905000)) ((1102 . 1301) (t 25864 6759 659723 204000)) (25864 6758 298960 0) 0 nil])
([nil nil ((180 . 200) (#("k" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -180) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (#("n" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -181) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (#("t" 0 1 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error))) . -182) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) 183 (175 . 183) (170 . 175) (t 25864 6790 267693 674000) 169) nil (25864 6847 867889 0) 0 nil])
([nil nil ((991 . 998) (990 . 992) (#("\"" 0 1 (fontified nil)) . 990) (958 . 991) (#("^^" 0 1 (fontified nil) 1 2 (fontified nil help-echo "syntax error" cursor-sensor-functions (js2-echo-error))) . 958) (957 . 960)) ((#(" ^^" 0 1 (fontified nil) 1 2 (fontified nil) 2 3 (fontified nil help-echo "syntax error" cursor-sensor-functions (js2-echo-error))) . 957) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (958 . 960) (#("&& document.visibilityState === \"" 0 11 (fontified nil) 11 12 (fontified nil) 12 16 (fontified nil font-lock-face js2-object-property-access) 16 27 (fontified nil font-lock-face js2-object-property-access) 27 32 (fontified nil) 32 33 (fontified nil)) . 958) (undo-tree-id533 . -32) (undo-tree-id534 . -32) (undo-tree-id535 . -32) (990 . 991) (#("\"\"" 0 1 (fontified nil font-lock-face font-lock-string-face) 1 2 (fontified nil font-lock-face font-lock-string-face)) . 990) (undo-tree-id536 . 1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (#("visible" 0 4 (fontified t font-lock-face font-lock-string-face) 4 7 (fontified t font-lock-face font-lock-string-face)) . 991) (undo-tree-id540 . -4) (undo-tree-id541 . -4) (undo-tree-id542 . -4)) (25864 6756 380557 0) 0 nil])
([nil nil ((1109 . 1112) (1088 . 1109) (1077 . 1088) (t 25864 6847 871454 501000) 1076) nil (25864 6860 478985 0) 0 nil])
([nil nil ((#("
  observeVisibility = () => {
    document.addEventListener('visibilitychange', this.handleVisibilityChange)
  }

  unobserveVisibility = () => {
    document.removeEventListener(
      'visibilitychange',
      this.handleVisibilityChange
    )
  }
" 0 1 (fontified t) 1 3 (fontified t) 3 20 (fontified t) 20 23 (fontified t) 23 24 (fontified t) 24 25 (fontified t) 25 28 (fontified t) 28 29 (fontified t) 29 30 (fontified t) 30 31 (fontified t) 31 35 (fontified t) 35 36 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 36 43 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 43 44 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 44 60 (fontified t font-lock-face js2-function-call help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 60 61 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 61 79 (fontified t font-lock-face font-lock-string-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 79 81 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 81 85 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 85 86 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 86 108 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 108 109 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 109 110 (fontified t) 110 112 (fontified t) 112 113 (fontified t) 113 114 (fontified t) 114 115 (fontified t) 115 117 (fontified t) 117 136 (fontified t) 136 147 (fontified t) 147 160 (fontified t) 160 179 (fontified t font-lock-face js2-function-call) 179 187 (fontified t) 187 205 (fontified t font-lock-face font-lock-string-face) 205 213 (fontified t) 213 217 (fontified t font-lock-face font-lock-builtin-face) 217 218 (fontified t) 218 240 (fontified t font-lock-face js2-object-property-access) 240 241 (fontified t) 241 246 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 246 247 (fontified t) 247 250 (fontified t) 250 251 (fontified t)) . 572) (undo-tree-id490 . -247) (undo-tree-id491 . -250) (undo-tree-id492 . -247) (undo-tree-id493 . -247) (undo-tree-id494 . -247) (undo-tree-id495 . -241) (undo-tree-id496 . -246) (undo-tree-id497 . -35) (undo-tree-id498 . -109) (undo-tree-id499 . -251) (undo-tree-id500 . -247) (undo-tree-id501 . -247) (undo-tree-id502 . -251) 819) ((572 . 823)) (25864 6754 373707 0) 0 nil])
([nil nil ((1211 . 1215) (1190 . 1211) (1179 . 1190) (t 25864 6860 482091 362000) 1178) nil (25864 6868 394852 0) 0 nil])
([nil nil ((#("      this.unobserveVisibility()
" 0 6 (fontified t) 6 7 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 7 10 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 10 11 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 11 30 (fontified t font-lock-face js2-function-call help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 30 32 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 32 33 (fontified t)) . 529) (undo-tree-id485 . -32) (undo-tree-id486 . -31) (undo-tree-id487 . -6) (undo-tree-id488 . -32) (undo-tree-id489 . -33)) ((529 . 562)) (25864 6753 914849 0) 0 nil])
([nil nil ((#("          this.intersecting = false
" 0 10 (fontified t) 10 11 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 11 14 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 14 15 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 15 27 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 27 30 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 30 35 (fontified t font-lock-face font-lock-constant-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 35 36 (fontified t)) . 1180) (undo-tree-id590 . 1) (undo-tree-id591 . -35) (undo-tree-id592 . -34) (undo-tree-id593 . -10) (undo-tree-id594 . -35) (undo-tree-id595 . -34) (undo-tree-id596 . -34) (undo-tree-id597 . -34) (undo-tree-id598 . -36) 1214 (t 25864 6868 398543 100000)) nil (25864 6874 435831 0) 0 nil])
([nil nil ((#("      this.observeVisibility()
" 0 6 (fontified t) 6 7 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 7 10 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 10 11 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 11 28 (fontified t font-lock-face js2-function-call help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 28 30 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 30 31 (fontified t)) . 368) (undo-tree-id481 . -30) (undo-tree-id482 . -6) (undo-tree-id483 . -30) (undo-tree-id484 . -31)) ((368 . 399)) (25864 6753 459529 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1139 . 1140) (1130 . 1166) 1138) nil (25864 6874 435826 0) 0 nil])
([nil nil ((610 . 688) (#("        if (entry.isIntersecting && document.visibilityState === \"visible\") {
" 0 8 (fontified t) 8 10 (fontified t font-lock-face font-lock-keyword-face) 10 18 (fontified t) 18 32 (fontified t font-lock-face js2-object-property-access) 32 44 (fontified t) 44 45 (fontified t) 45 60 (fontified t font-lock-face js2-object-property-access) 60 65 (fontified t) 65 74 (fontified t font-lock-face font-lock-string-face) 74 75 (fontified t) 75 76 (fontified t) 76 77 (fontified t) 77 78 (fontified t)) . -610) (undo-tree-id480 . 5)) ((610 . 688) (#("        if (entry.isIntersecting && document.visibilityState === 'visible') {
" 0 8 (fontified t) 8 10 (fontified t font-lock-face font-lock-keyword-face) 10 18 (fontified t) 18 32 (fontified t font-lock-face js2-object-property-access) 32 45 (fontified t) 45 60 (fontified t font-lock-face js2-object-property-access) 60 65 (fontified t) 65 74 (fontified t font-lock-face font-lock-string-face) 74 78 (fontified t)) . 610) (t 25864 6488 287458 967000)) (25864 6488 283063 0) 0 nil])
([nil nil ((#("          this.intersecting = true
" 0 10 (fontified t) 10 11 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 11 14 (fontified t font-lock-face font-lock-builtin-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 14 15 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 15 27 (fontified t font-lock-face js2-object-property-access help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 27 30 (fontified t help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 30 34 (fontified t font-lock-face font-lock-constant-face help-echo "missing ; after statement" cursor-sensor-functions (js2-echo-error)) 34 35 (fontified t)) . 1078) (undo-tree-id583 . -34) (undo-tree-id584 . -10) (undo-tree-id585 . -10) (undo-tree-id586 . -10) (undo-tree-id587 . -34) (undo-tree-id588 . -10) (undo-tree-id589 . -35) 1088) nil (25864 6874 435824 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1042 . 1043) (#("
" 0 1 (fontified nil)) . -1067) (1032 . 1068) 965) nil (25864 6874 435810 0) 0 nil])
([nil current ((1330 . 1351) (t 25864 6874 438765 235000)) nil (25864 6892 729061 0) 0 nil])
nil
